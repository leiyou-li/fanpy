name: Sync Sites Configuration

on:
  # 可以手动触发
  workflow_dispatch:
    inputs:
      dry_run:
        description: '预览模式（不实际修改文件）'
        required: false
        default: 'false'
        type: boolean
  
  # 当spider.json文件发生变化时自动触发
  push:
    paths:
      - 'spider.json'
    branches:
      - main
  
  # 每天额外运行一次确保同步
  schedule:
    - cron: '30 0 * * *'  # 北京时间08:30 (UTC 00:30)

jobs:
  sync-sites:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Configure Git
        run: |
          git config user.name "sites-sync[bot]"
          git config user.email "sites-sync[bot]@users.noreply.github.com"

      - name: Check files existence
        id: check_files
        run: |
          if [ -f "spider.json" ]; then
            echo "spider_exists=true" >> $GITHUB_OUTPUT
          else
            echo "spider_exists=false" >> $GITHUB_OUTPUT
            echo "⚠️ spider.json 不存在"
          fi
          
          if [ -f "moyun.json" ]; then
            echo "moyun_exists=true" >> $GITHUB_OUTPUT
          else
            echo "moyun_exists=false" >> $GITHUB_OUTPUT
            echo "⚠️ moyun.json 不存在"
          fi

      - name: Create scripts directory
        if: steps.check_files.outputs.spider_exists == 'true' && steps.check_files.outputs.moyun_exists == 'true'
        run: mkdir -p scripts

      - name: Run sites sync
        if: steps.check_files.outputs.spider_exists == 'true' && steps.check_files.outputs.moyun_exists == 'true'
        id: sync_sites
        run: |
          echo "🔄 开始同步sites配置..."
          
          DRY_RUN_FLAG=""
          if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
            DRY_RUN_FLAG="--dry-run"
            echo "🔍 运行在预览模式"
          fi
          
          # 运行同步脚本
          if python scripts/sync_sites.py $DRY_RUN_FLAG; then
            echo "sync_success=true" >> $GITHUB_OUTPUT
            echo "✅ Sites配置处理成功"
            
            # 检查是否有变更需要提交（非预览模式）
            if [ "${{ github.event.inputs.dry_run }}" != "true" ]; then
              if git diff --quiet moyun.json; then
                echo "has_changes=false" >> $GITHUB_OUTPUT
                echo "ℹ️ moyun.json 无需更新"
              else
                echo "has_changes=true" >> $GITHUB_OUTPUT
                echo "📝 moyun.json 已更新"
                
                # 获取统计信息
                SITES_COUNT=$(python -c "
import json
try:
    with open('moyun.json', 'r', encoding='utf-8') as f:
        data = json.load(f)
    sites_count = len(data.get('sites', []))
    print(sites_count)
except:
    print(0)
")
                echo "sites_count=$SITES_COUNT" >> $GITHUB_OUTPUT
              fi
            else
              echo "has_changes=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "sync_success=false" >> $GITHUB_OUTPUT
            echo "❌ Sites配置处理失败"
          fi

      - name: Commit and push changes
        if: steps.sync_sites.outputs.sync_success == 'true' && steps.sync_sites.outputs.has_changes == 'true'
        run: |
          echo "📝 提交配置变更..."
          
          git add moyun.json
          
          # 创建详细的提交信息
          COMMIT_MSG="🔧 Auto-sync sites configuration
          
          📊 配置统计:
          - Sites数量: ${{ steps.sync_sites.outputs.sites_count }}
          - 同步时间: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          - 触发方式: ${{ github.event_name }}
          
          🔄 同步来源: spider.json → moyun.json
          🤖 自动同步: GitHub Actions"
          
          git commit -m "$COMMIT_MSG"
          git push origin main
          
          echo "✅ 配置变更已提交并推送"

      - name: Generate summary
        if: always()
        run: |
          echo "# 🔧 Sites配置同步报告" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**同步时间**: $(date -u '+%Y-%m-%d %H:%M:%S') UTC ($(date '+%Y-%m-%d %H:%M:%S') 北京时间)" >> $GITHUB_STEP_SUMMARY
          echo "**触发方式**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
            echo "**运行模式**: 🔍 预览模式（未修改文件）" >> $GITHUB_STEP_SUMMARY
          else
            echo "**运行模式**: ✅ 正常模式" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # 文件检查结果
          echo "## 📁 文件检查" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.check_files.outputs.spider_exists }}" == "true" ]; then
            echo "- ✅ spider.json 存在" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ spider.json 不存在" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ steps.check_files.outputs.moyun_exists }}" == "true" ]; then
            echo "- ✅ moyun.json 存在" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ moyun.json 不存在" >> $GITHUB_STEP_SUMMARY
          fi
          
          # 同步结果
          if [ "${{ steps.check_files.outputs.spider_exists }}" == "true" ] && [ "${{ steps.check_files.outputs.moyun_exists }}" == "true" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "## 🔄 同步结果" >> $GITHUB_STEP_SUMMARY
            
            if [ "${{ steps.sync_sites.outputs.sync_success }}" == "true" ]; then
              if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
                echo "- ✅ 预览模式运行成功" >> $GITHUB_STEP_SUMMARY
              elif [ "${{ steps.sync_sites.outputs.has_changes }}" == "true" ]; then
                echo "- ✅ 配置已更新并提交" >> $GITHUB_STEP_SUMMARY
                echo "- 📊 Sites数量: ${{ steps.sync_sites.outputs.sites_count }}" >> $GITHUB_STEP_SUMMARY
              else
                echo "- ℹ️ 配置已是最新，无需更新" >> $GITHUB_STEP_SUMMARY
              fi
            else
              echo "- ❌ 同步失败，请检查日志" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "## ⚠️ 跳过同步" >> $GITHUB_STEP_SUMMARY
            echo "由于必要文件不存在，跳过sites配置同步。" >> $GITHUB_STEP_SUMMARY
          fi